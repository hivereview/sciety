apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}--frontend
  labels:
    {{- include "sciety.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  selector:
    matchLabels:
      {{- include "sciety.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        {{- include "sciety.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      containers:
        - name: app
          image: "{{ .Values.images.frontend.repository }}:{{ .Values.images.frontend.tag }}"
          resources:
            requests:
              cpu: 1.0
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}--public-env-vars
                optional: true
          env:
            - name: ALLOW_SITE_CRAWLERS
              value: "{{ .Values.allowSiteCrawlers }}"
            - name: APP_ORIGIN
              value: https://{{ .Values.hostname }}
            - name: APP_SECRET
              value: "{{ .Values.appSecret }}"
            - name: APP_CACHE
              value: "{{ .Values.appCache }}"
            - name: CACHE_HOST
              value: "{{ .Release.Name }}--cache"
            - name: CROSSREF_API_BEARER_TOKEN
              value: {{ .Values.crossrefApiBearerToken }}
            - name: EXPERIMENT_ENABLED
              value: "{{ .Values.experimentEnabled }}"
            - name: FATHOM_SITE_ID
              value: {{ .Values.fathomSiteId }}
            - name: GOOGLE_TAG_MANAGER_ID
              value: {{ .Values.googleTagManagerId }}
            - name: SCIETY_API
              value: "https://{{ .Values.hostname }}"
            - name: SCIETY_TEAM_API_BEARER_TOKEN
              value: {{ .Values.ingestionAuthBearerToken }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresqlSecretName }}"
                  key: postgresql-password
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresqlSecretName }}"
                  key: postgresql-port
            - name: AUTH0_CLIENT_ID
              value: {{ .Values.auth0ClientId }}
            - name: AUTH0_CLIENT_SECRET
              value: {{ .Values.auth0ClientSecret }}
            - name: AUTH0_DOMAIN
              value: {{ .Values.auth0Domain }}
            - name: AUTH0_CALLBACK_URL
              value: {{ .Values.auth0CallbackUrl }}
          volumeMounts:
            - name: gcp-ncrc-key
              mountPath: "/var/run/secrets/app"
              readOnly: true
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            timeoutSeconds: 5
      volumes:
        - name: gcp-ncrc-key
          secret:
            secretName: ncrc-sheet-key
