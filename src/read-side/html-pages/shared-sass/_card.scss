@use 'breakpoints';
@use 'functions';
@use 'list';
@use 'settings';
@use 'typography';
@use 'avatar';

$_card-border-radius: settings.$border-radius;

@mixin basics($is-entire-card-linked: false) {
  @if $is-entire-card-linked == true {
    position: relative;
  }

  & {
    background-color: settings.$colour-white;
    padding: 1rem functions.px-to-rem(settings.$default-gutter);
    border: settings.$border-width solid settings.$colour-furniture;
    border-left-width: 0;
    border-right-width: 0;
  }

  @include breakpoints.not-narrow {
    border-radius: $_card-border-radius;
    border-left-width: settings.$border-width;
    border-right-width: settings.$border-width;
  }
}

@mixin title() {
  margin-bottom: 0.25rem;

  @include typography.card-title;
}

@mixin link() {
  color: settings.$colour-text-primary;

  &:any-link {
    color: settings.$colour-text-primary;

    &:active,
    &:hover {
      color: settings.$colour-text-primary;
    }
  }
}

@mixin entire-card-link() {
  @include link;

  &:hover {
    &::after {
      box-shadow: 0 0 10px 0 rgb(0 0 0 / 20%);
    }
  }

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: $_card-border-radius;
  }
}

@mixin meta() {
  color: settings.$colour-text-secondary;

  @include typography.details;
  @include typography.list-separator;
}

@mixin list() {
  margin-top: 0;
  margin-bottom: 1.5rem;

  @include list.basics;

  > li {
    margin-bottom: 0.5rem;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

@mixin list-item() {
  & {
    margin-bottom: 0.5rem;
  }

  &:last-child {
    margin-bottom: 0;
  }
}

@mixin avatar() {
  width: avatar.$size--small;
  height: avatar.$size--small;
  flex: 0 0 avatar.$size--small;

  @include avatar.border;
}
