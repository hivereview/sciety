@use 'settings';;
@use 'functions';
@use 'link';
@use 'typography';

@mixin _separate-area-when-focused() {
  &:focus-visible {
    outline-style: none;
    box-shadow: 0 0 0 settings.$focus-width settings.$colour-focus;
  }

  &:focus {
    outline-style: none;
    box-shadow: 0 0 0 settings.$focus-width settings.$colour-focus;

    &:not(:focus-visible) {
      box-shadow: none;
    }
  }
}

html {
  font-size: unset;
}

body {
  min-height: 100vh;
  font-family: settings.$font-family;
  font-size: settings.$base-font-measure;
  line-height: 1.5;
  margin: 0;
  color: settings.$colour-text-primary;
  background-color: settings.$colour-white;
}

p {
  @include typography.body();
  margin-top: 0;
  margin-bottom: functions.px-to-rem(24px);


  a {
    @include link.engaged-state {
      text-decoration: underline;
    }
  }
}

p + ul,
p + ol {
  margin-top: functions.px-to-rem(-16px);
}

h1 {
  @include typography.heading-1();
  margin-top: 0;
  margin-bottom: functions.px-to-rem(16px);
}

h2 {
  @include typography.heading-2();
  margin-top: 0;
  margin-bottom: functions.px-to-rem(16px);
}

h3 {
  @include typography.heading-3();
  margin-top: 0;
  margin-bottom: functions.px-to-rem(16px);
}

h4 {
  @include typography.heading-4();
  margin-top: 0;
  margin-bottom: functions.px-to-rem(16px);
}

h5 {
  @include typography.heading-5();
  margin-top: 0;
  margin-bottom: functions.px-to-rem(16px);
}

h6 {
  @include typography.heading-6();
  margin-top: 0;
  margin-bottom: functions.px-to-rem(16px);
}

blockquote {
  border-left: functions.px-to-rem(8px) solid settings.$colour-furniture;
  margin-left: functions.px-to-rem(24px);
  padding-left: functions.px-to-rem(16px);
}

pre {
  overflow-x: scroll;
}

ul {
  margin-top: 0;
}

li {
  @include typography.body();
}

a {
  @include link.normal-state() {
    color: settings.$colour-accent;
    text-decoration: none;
  }
  @include link.engaged-state() {
    color: settings.$colour-accent-hover;
  }
}

a[href],
button,
input,
textarea {
  @include _separate-area-when-focused();
}

input,
textarea {
  font-family: inherit;
  font-size: inherit;
}

textarea {
  display: block;
  width: 100%;
  margin-bottom: functions.px-to-rem(settings.$default-form-gutter);
  padding: functions.px-to-rem(settings.$default-form-gutter);
  border: settings.$border-width solid settings.$colour-furniture;
  border-radius: settings.$border-radius;
}

button {
  @include typography.button();
  cursor: pointer;
}

fieldset {
  border: settings.$border-width solid settings.$colour-furniture;
  border-radius: settings.$border-radius;
  margin-bottom: functions.px-to-rem(settings.$default-form-vertical-spacing);
}

input[type='checkbox'] {
  margin-left: 0;
}

input[type='radio'] {
  flex-shrink: 0;
  height: functions.px-to-rem(22px);
  width: functions.px-to-rem(22px);
  margin-top: 0;
  margin-bottom: 0;
}

/*
Prevent styling of <a> elements that aren't links
*/

a:not([href]) {
  color: inherit;
  text-decoration: inherit;
}

/*
Use real subscript and superscript characters where possible
*/

@supports (font-variant-position: sub) {
  sub {
    font-size: inherit;
    font-variant-position: sub;
    position: static;
  }
}

@supports (font-variant-position: super) {
  sup {
    font-size: inherit;
    font-variant-position: super;
    position: static;
  }
}

p:last-child {
  margin-bottom: functions.px-to-rem(16px);
}

table {
  border-top: settings.$border-width solid settings.$colour-furniture;
  border-bottom: settings.$border-width solid settings.$colour-furniture;
  margin-bottom: functions.px-to-rem(24px);
}

td,
th {
  padding: functions.px-to-rem(4px);
  vertical-align: top;

  &:first-child {
    padding-left: 0;
  }

  &:last-child {
    padding-right: 0;
  }

  tr:first-child & {
    padding-top: 0;
  }

  tr:last-child & {
    padding-bottom: 0;
  }
}

address {
  @include typography.body();
  font-style: normal;
  margin-bottom: functions.px-to-rem(16px);
}

*,
::after,
::before {
  box-sizing: border-box;
}

