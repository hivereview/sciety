name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]


env:
  IMAGE_TAG: ${{ github.sha }}
  DOCKER_BUILDKIT: 1

jobs:

  frontend:

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: NPM Cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Build Docker images
        run: |
          make IMAGE_TAG=${IMAGE_TAG} TARGET=prod build
          make IMAGE_TAG=${IMAGE_TAG} TARGET=dev build

      - name: Taiko
        run: |
          make taiko

      - name: Lint
        run: |
          make IMAGE_TAG=${IMAGE_TAG} lint

      - name: Test
        run: |
          make IMAGE_TAG=${IMAGE_TAG} test

      - name: Smoke test
        run: |
          .github/smoke-test.sh

      - name: Backstop test
        if: github.ref == 'refs/heads/main'
        run: |
          make IMAGE_TAG=${IMAGE_TAG} backstop-test
        env:
          CROSSREF_API_BEARER_TOKEN: ${{ secrets.CROSSREF_API_BEARER_TOKEN }}
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET_KEY: ${{ secrets.TWITTER_API_SECRET_KEY }}
          TWITTER_API_BEARER_TOKEN: ${{ secrets.TWITTER_API_BEARER_TOKEN }}

      - name: Push Image to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
          docker push sciety/sciety:${IMAGE_TAG}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Deploy to staging
        if: github.ref == 'refs/heads/main'
        run: |
          aws --region=us-east-1 eks update-kubeconfig --name libero-eks--franklin
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm dependency build helm/sciety
          helm upgrade -i sciety--staging \
            --set images.frontend.tag=${IMAGE_TAG} \
            --set hostname=staging.sciety.org \
            --set oldHostname=staging.hive.review \
            --set crossrefApiBearerToken=${CROSSREF_API_BEARER_TOKEN} \
            --set-string experimentEnabled="true" \
            --set appSecret=${APP_SECRET} \
            --set twitterApiKey=${TWITTER_API_KEY} \
            --set twitterApiSecretKey=${TWITTER_API_SECRET_KEY} \
            --set twitterApiBearerToken=${TWITTER_API_BEARER_TOKEN} \
            --set postgresqlSecretName=hive-staging-rds-postgres \
            --set googleTagManagerId='GTM-NX7CQB4&gtm_auth=tr7n0_xarXwUvEK3s5TIbg&gtm_preview=env-19&gtm_cookies_win=x' \
            --wait \
            helm/sciety
        env:
          APP_SECRET: ${{ secrets.APP_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CROSSREF_API_BEARER_TOKEN: ${{ secrets.CROSSREF_API_BEARER_TOKEN }}
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET_KEY: ${{ secrets.TWITTER_API_SECRET_KEY }}
          TWITTER_API_BEARER_TOKEN: ${{ secrets.TWITTER_API_BEARER_TOKEN }}

      - name: Notify Slack
        if: failure() && github.ref == 'refs/heads/main'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: sciety-general
          status: FAILED
          color: danger

      - name: Archive Taiko screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: feature-test-screenshots
          path: feature-test/screenshots
